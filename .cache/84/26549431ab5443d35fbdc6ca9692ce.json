{"id":"node_modules/tokenize-text/lib/index.js","dependencies":[{"name":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/package.json","includedInParent":true,"mtime":1597318560231},{"name":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/node_modules/tokenize-text/package.json","includedInParent":true,"mtime":1597318560211},{"name":"lodash","loc":{"line":1,"column":16},"parent":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/node_modules/tokenize-text/lib/index.js","resolved":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/node_modules/lodash/index.js"},{"name":"./tokens","loc":{"line":3,"column":25},"parent":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/node_modules/tokenize-text/lib/index.js","resolved":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/node_modules/tokenize-text/lib/tokens.js"}],"generated":{"js":"var _ = require(\"lodash\");\n\nvar tokenUtils = require('./tokens');\n\nvar WORD_BOUNDARY_CHARS = '\\t\\r\\n\\u00A0 !\\\"#$%&()*+,\\-.\\\\/:;<=>?@\\[\\\\\\]^_`{|}~';\nvar WORD_BOUNDARY_REGEX = new RegExp('[' + WORD_BOUNDARY_CHARS + ']');\nvar SPLIT_REGEX = new RegExp(\n    '([^' + WORD_BOUNDARY_CHARS + ']+)');\n\nfunction Tokenizer(opts) {\n    if (!(this instanceof Tokenizer)) return (new Tokenizer(opts));\n\n    this.opts = _.defaults(opts || {}, {\n        cacheGet: function(key) { return null; },\n        cacheSet: function(key, value) { }\n    });\n\n    _.bindAll(this);\n}\n\n// Tokenize a text using a transformative function\nTokenizer.prototype.split = function tokenizeSplit(fn, opts) {\n    var that = this;\n\n    opts = _.defaults(opts || {}, {\n        preserveProperties: true,\n        cache: _.constant(null)\n    });\n\n    return function(text, tok) {\n        // If called as a split function, directly call fn\n        if (arguments.length == 6) return fn.apply(null, arguments);\n\n        var prev = undefined;\n        var cacheId, cacheValue;\n\n        // if string, convert to one large token\n        if (_.isString(text)) {\n            text = [\n                {\n                    value: text,\n                    index: 0,\n                    offset: text.length\n                }\n            ];\n        } else if (!_.isArray(text)) {\n            text = [text];\n        }\n\n        cacheId = tokenUtils.tokensId(text, opts.cache());\n        if (cacheId) {\n            cacheValue = that.opts.cacheGet(cacheId);\n            if (cacheValue) {\n                return cacheValue;\n            }\n        }\n\n        return _.chain(text)\n            .map(function(token, i) {\n                var next = text[i + 1];\n                var tokens = fn(\n                    // Current text value\n                    token.value,\n\n                    // Current complete token\n                    _.clone(token),\n\n                    // Previous token\n                    prev? _.clone(prev) : null,\n\n                    // Next token\n                    next? _.clone(next) : null,\n\n                    // Index in the tokens list\n                    i,\n\n                    // List of all tokens\n                    text\n                ) || [];\n\n                // Normalize tokens and return\n                tokens = tokenUtils.normalize(token, tokens);\n\n                // Preserve properties\n                if (opts.preserveProperties) {\n                    var props = tokenUtils.properties(token);\n                    tokens = _.map(tokens, function(_tok) {\n                        return _.defaults(_tok, props);\n                    });\n                }\n\n                // Update reference to prev\n                prev = token;\n\n                return tokens;\n            })\n            .compact()\n            .flatten()\n            .tap(function(_tokens) {\n                if (!cacheId) return;\n\n                that.opts.cacheSet(cacheId, _tokens);\n            })\n            .value();\n    };\n};\n\n// Debug a tokenizing flow\nTokenizer.prototype.debug = function tokenizeDebug(prefix) {\n    return this.filter(function(text, tok) {\n        var props = tokenUtils.properties(tok);\n\n        console.log(\n            prefix || '',\n            '[' + tok.index + '-' + (tok.index + tok.offset) + ']',\n            JSON.stringify(tok.value),\n            _.size(props)? JSON.stringify(props) : ''\n        );\n        return true;\n    });\n};\n\n\n// Tokenize a text using a RegExp\nTokenizer.prototype.re = function tokenizeRe(re, opts) {\n    opts = _.defaults(opts || {}, {\n        split: false\n    });\n\n    return this.split(function(text, tok) {\n        var originalText = text;\n        var tokens = [];\n        var match;\n        var start = 0;\n        var lastIndex = 0;\n\n        while (match = re.exec(text)) {\n            // Index in the current text section\n            var index = match.index;\n\n            // Index in the original text\n            var absoluteIndex = start + index;\n\n            var value = match[0] || \"\";\n            var offset = value.length;\n\n            // If splitting, push missed text\n            if (opts.split && start < absoluteIndex) {\n                var beforeText = originalText.slice(start, absoluteIndex);\n                tokens.push({\n                    value: beforeText,\n                    index: start,\n                    offset: beforeText.length\n                });\n            }\n\n            tokens.push({\n                value: value,\n                index: absoluteIndex,\n                offset: offset,\n                match: match\n            });\n\n            text = text.slice(index + offset);\n            start = absoluteIndex + offset;\n        }\n\n        // If splitting, push left text\n        if (opts.split && text) {\n            tokens.push({\n                value: text,\n                index: start,\n                offset: text.length\n            });\n        }\n\n        return tokens;\n    }, {\n        cache: function() {\n            return re.toString();\n        }\n    });\n};\n\n// Split and merge tokens\n// Used to split as sentences even if sentences is separated in multiple tokens (ex: markup)\n// if fn results contain a 'null', it will split in two tokens\nTokenizer.prototype.splitAndMerge = function tokenizeSplitAndMerge(fn, opts) {\n    var that = this;\n\n    opts = _.defaults(opts || {}, {\n        mergeWith: ''\n    });\n\n    return function(tokens) {\n        var result = [];\n        var accu = [];\n\n        function pushAccu() {\n            if (accu.length == 0) return;\n\n            // Merge accumulator into one token\n            var tok = tokenUtils.merge(accu, opts.mergeWith);\n\n            result.push(tok);\n            accu = [];\n        }\n\n        that.split(function(word, token) {\n            var toks = fn.apply(null, arguments);\n\n            // Normalize tokens\n            toks = tokenUtils.normalize(token, toks);\n\n            // Accumulate tokens and push to final results\n            _.each(toks, function(tok) {\n                if (tok === null) {\n                    pushAccu();\n                } else {\n                    accu.push(tok);\n                }\n            });\n        })(tokens);\n\n        // Push tokens left in accumulator\n        pushAccu();\n\n        return result;\n    };\n};\n\n// Filter when tokenising\nTokenizer.prototype.filter = function tokenizeFilter(fn) {\n    return this.split(function(text, tok) {\n        if (fn.apply(null, arguments)) {\n            return {\n                value: tok.value,\n                index: 0,\n                offset: tok.offset\n            };\n        }\n        return undefined;\n    });\n};\n\n// Extend a token properties\nTokenizer.prototype.extend = function tokenizeExtend(fn) {\n    return this.split(function(text, tok) {\n        var o = _.isFunction(fn)? fn.apply(null, arguments) : fn;\n\n        return _.extend({\n            value: tok.value,\n            index: 0,\n            offset: tok.offset\n        }, o);\n    });\n};\n\n// Condition for tokenizing flow\n// \"fns\" will be called if condition passed\nTokenizer.prototype.ifthen = function(condition, then) {\n    //var fns = _.toArray(arguments).slice(1);\n    //var flow = this.flow.apply(this, fns);\n\n    return this.split(function(text, tok) {\n        if (condition.apply(null, arguments)) {\n            return then.apply(null, arguments);\n        }\n\n        return _.omit(tok, 'index');\n    });\n};\n\n// Filter by testing a regex\nTokenizer.prototype.test = function tokenizeTest(re) {\n    return this.filter(function(text, tok) {\n        return re.test(text);\n    }, {\n        cache: re.toString()\n    });\n};\n\n// Process token by all arguments\nTokenizer.prototype.flow = function tokenizeFlow() {\n    var fn = _.flow.apply(_, arguments);\n    return this.split(fn);\n};\n\n// Group and process a token as a group\nTokenizer.prototype.serie = function tokenizeFlow() {\n    var fn = _.flow.apply(_, arguments);\n    return fn;\n};\n\n\n// Merge all tokens into one\nTokenizer.prototype.merge = _.partial(Tokenizer.prototype.splitAndMerge, _.identity);\n\n\nTokenizer.prototype.sections = _.partial(Tokenizer.prototype.re, /([^\\n\\.,;!?]+)/i, { split: false });\nTokenizer.prototype.words = _.partial(Tokenizer.prototype.re, SPLIT_REGEX);\nTokenizer.prototype.characters = _.partial(Tokenizer.prototype.re, /[^\\s]/);\n\nmodule.exports = Tokenizer;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/tokenize-text/lib/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}}],"sources":{"node_modules/tokenize-text/lib/index.js":"var _ = require(\"lodash\");\n\nvar tokenUtils = require('./tokens');\n\nvar WORD_BOUNDARY_CHARS = '\\t\\r\\n\\u00A0 !\\\"#$%&()*+,\\-.\\\\/:;<=>?@\\[\\\\\\]^_`{|}~';\nvar WORD_BOUNDARY_REGEX = new RegExp('[' + WORD_BOUNDARY_CHARS + ']');\nvar SPLIT_REGEX = new RegExp(\n    '([^' + WORD_BOUNDARY_CHARS + ']+)');\n\nfunction Tokenizer(opts) {\n    if (!(this instanceof Tokenizer)) return (new Tokenizer(opts));\n\n    this.opts = _.defaults(opts || {}, {\n        cacheGet: function(key) { return null; },\n        cacheSet: function(key, value) { }\n    });\n\n    _.bindAll(this);\n}\n\n// Tokenize a text using a transformative function\nTokenizer.prototype.split = function tokenizeSplit(fn, opts) {\n    var that = this;\n\n    opts = _.defaults(opts || {}, {\n        preserveProperties: true,\n        cache: _.constant(null)\n    });\n\n    return function(text, tok) {\n        // If called as a split function, directly call fn\n        if (arguments.length == 6) return fn.apply(null, arguments);\n\n        var prev = undefined;\n        var cacheId, cacheValue;\n\n        // if string, convert to one large token\n        if (_.isString(text)) {\n            text = [\n                {\n                    value: text,\n                    index: 0,\n                    offset: text.length\n                }\n            ];\n        } else if (!_.isArray(text)) {\n            text = [text];\n        }\n\n        cacheId = tokenUtils.tokensId(text, opts.cache());\n        if (cacheId) {\n            cacheValue = that.opts.cacheGet(cacheId);\n            if (cacheValue) {\n                return cacheValue;\n            }\n        }\n\n        return _.chain(text)\n            .map(function(token, i) {\n                var next = text[i + 1];\n                var tokens = fn(\n                    // Current text value\n                    token.value,\n\n                    // Current complete token\n                    _.clone(token),\n\n                    // Previous token\n                    prev? _.clone(prev) : null,\n\n                    // Next token\n                    next? _.clone(next) : null,\n\n                    // Index in the tokens list\n                    i,\n\n                    // List of all tokens\n                    text\n                ) || [];\n\n                // Normalize tokens and return\n                tokens = tokenUtils.normalize(token, tokens);\n\n                // Preserve properties\n                if (opts.preserveProperties) {\n                    var props = tokenUtils.properties(token);\n                    tokens = _.map(tokens, function(_tok) {\n                        return _.defaults(_tok, props);\n                    });\n                }\n\n                // Update reference to prev\n                prev = token;\n\n                return tokens;\n            })\n            .compact()\n            .flatten()\n            .tap(function(_tokens) {\n                if (!cacheId) return;\n\n                that.opts.cacheSet(cacheId, _tokens);\n            })\n            .value();\n    };\n};\n\n// Debug a tokenizing flow\nTokenizer.prototype.debug = function tokenizeDebug(prefix) {\n    return this.filter(function(text, tok) {\n        var props = tokenUtils.properties(tok);\n\n        console.log(\n            prefix || '',\n            '[' + tok.index + '-' + (tok.index + tok.offset) + ']',\n            JSON.stringify(tok.value),\n            _.size(props)? JSON.stringify(props) : ''\n        );\n        return true;\n    });\n};\n\n\n// Tokenize a text using a RegExp\nTokenizer.prototype.re = function tokenizeRe(re, opts) {\n    opts = _.defaults(opts || {}, {\n        split: false\n    });\n\n    return this.split(function(text, tok) {\n        var originalText = text;\n        var tokens = [];\n        var match;\n        var start = 0;\n        var lastIndex = 0;\n\n        while (match = re.exec(text)) {\n            // Index in the current text section\n            var index = match.index;\n\n            // Index in the original text\n            var absoluteIndex = start + index;\n\n            var value = match[0] || \"\";\n            var offset = value.length;\n\n            // If splitting, push missed text\n            if (opts.split && start < absoluteIndex) {\n                var beforeText = originalText.slice(start, absoluteIndex);\n                tokens.push({\n                    value: beforeText,\n                    index: start,\n                    offset: beforeText.length\n                });\n            }\n\n            tokens.push({\n                value: value,\n                index: absoluteIndex,\n                offset: offset,\n                match: match\n            });\n\n            text = text.slice(index + offset);\n            start = absoluteIndex + offset;\n        }\n\n        // If splitting, push left text\n        if (opts.split && text) {\n            tokens.push({\n                value: text,\n                index: start,\n                offset: text.length\n            });\n        }\n\n        return tokens;\n    }, {\n        cache: function() {\n            return re.toString();\n        }\n    });\n};\n\n// Split and merge tokens\n// Used to split as sentences even if sentences is separated in multiple tokens (ex: markup)\n// if fn results contain a 'null', it will split in two tokens\nTokenizer.prototype.splitAndMerge = function tokenizeSplitAndMerge(fn, opts) {\n    var that = this;\n\n    opts = _.defaults(opts || {}, {\n        mergeWith: ''\n    });\n\n    return function(tokens) {\n        var result = [];\n        var accu = [];\n\n        function pushAccu() {\n            if (accu.length == 0) return;\n\n            // Merge accumulator into one token\n            var tok = tokenUtils.merge(accu, opts.mergeWith);\n\n            result.push(tok);\n            accu = [];\n        }\n\n        that.split(function(word, token) {\n            var toks = fn.apply(null, arguments);\n\n            // Normalize tokens\n            toks = tokenUtils.normalize(token, toks);\n\n            // Accumulate tokens and push to final results\n            _.each(toks, function(tok) {\n                if (tok === null) {\n                    pushAccu();\n                } else {\n                    accu.push(tok);\n                }\n            });\n        })(tokens);\n\n        // Push tokens left in accumulator\n        pushAccu();\n\n        return result;\n    };\n};\n\n// Filter when tokenising\nTokenizer.prototype.filter = function tokenizeFilter(fn) {\n    return this.split(function(text, tok) {\n        if (fn.apply(null, arguments)) {\n            return {\n                value: tok.value,\n                index: 0,\n                offset: tok.offset\n            };\n        }\n        return undefined;\n    });\n};\n\n// Extend a token properties\nTokenizer.prototype.extend = function tokenizeExtend(fn) {\n    return this.split(function(text, tok) {\n        var o = _.isFunction(fn)? fn.apply(null, arguments) : fn;\n\n        return _.extend({\n            value: tok.value,\n            index: 0,\n            offset: tok.offset\n        }, o);\n    });\n};\n\n// Condition for tokenizing flow\n// \"fns\" will be called if condition passed\nTokenizer.prototype.ifthen = function(condition, then) {\n    //var fns = _.toArray(arguments).slice(1);\n    //var flow = this.flow.apply(this, fns);\n\n    return this.split(function(text, tok) {\n        if (condition.apply(null, arguments)) {\n            return then.apply(null, arguments);\n        }\n\n        return _.omit(tok, 'index');\n    });\n};\n\n// Filter by testing a regex\nTokenizer.prototype.test = function tokenizeTest(re) {\n    return this.filter(function(text, tok) {\n        return re.test(text);\n    }, {\n        cache: re.toString()\n    });\n};\n\n// Process token by all arguments\nTokenizer.prototype.flow = function tokenizeFlow() {\n    var fn = _.flow.apply(_, arguments);\n    return this.split(fn);\n};\n\n// Group and process a token as a group\nTokenizer.prototype.serie = function tokenizeFlow() {\n    var fn = _.flow.apply(_, arguments);\n    return fn;\n};\n\n\n// Merge all tokens into one\nTokenizer.prototype.merge = _.partial(Tokenizer.prototype.splitAndMerge, _.identity);\n\n\nTokenizer.prototype.sections = _.partial(Tokenizer.prototype.re, /([^\\n\\.,;!?]+)/i, { split: false });\nTokenizer.prototype.words = _.partial(Tokenizer.prototype.re, SPLIT_REGEX);\nTokenizer.prototype.characters = _.partial(Tokenizer.prototype.re, /[^\\s]/);\n\nmodule.exports = Tokenizer;\n"},"lineCount":305}},"error":null,"hash":"268bfe88b6e96d9500150849cf8c37f2","cacheData":{"env":{}}}