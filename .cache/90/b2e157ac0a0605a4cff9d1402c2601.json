{"id":"node_modules/markdown-it/lib/rules_block/code.js","dependencies":[{"name":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/package.json","includedInParent":true,"mtime":1597318560231},{"name":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/node_modules/markdown-it/package.json","includedInParent":true,"mtime":1597318553241}],"generated":{"js":"// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/code.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}}],"sources":{"node_modules/markdown-it/lib/rules_block/code.js":"// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n"},"lineCount":35}},"error":null,"hash":"3b531f8bf935440d2fec1edc63c0581e","cacheData":{"env":{}}}