{"id":"node_modules/markdown-it/lib/rules_block/table.js","dependencies":[{"name":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/package.json","includedInParent":true,"mtime":1597318560231},{"name":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/node_modules/markdown-it/package.json","includedInParent":true,"mtime":1597318553241},{"name":"../common/utils","loc":{"line":5,"column":22},"parent":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/node_modules/markdown-it/lib/rules_block/table.js","resolved":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/node_modules/markdown-it/lib/common/utils.js"}],"generated":{"js":"// GFM table, non-standard\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      escapes = 0,\n      lastPos = 0,\n      backTicked = false,\n      lastBackTick = 0;\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x60/* ` */) {\n      if (backTicked) {\n        // make \\` close code sequence, but not open it;\n        // the reason is: `\\` is correct code block\n        backTicked = false;\n        lastBackTick = pos;\n      } else if (escapes % 2 === 0) {\n        backTicked = true;\n        lastBackTick = pos;\n      }\n    } else if (ch === 0x7c/* | */ && (escapes % 2 === 0) && !backTicked) {\n      result.push(str.substring(lastPos, pos));\n      lastPos = pos + 1;\n    }\n\n    if (ch === 0x5c/* \\ */) {\n      escapes++;\n    } else {\n      escapes = 0;\n    }\n\n    pos++;\n\n    // If there was an un-closed backtick, go back to just after\n    // the last backtick, but as if it was a normal character\n    if (pos === max && backTicked) {\n      backTicked = false;\n      pos = lastBackTick + 1;\n    }\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n  // header row will define an amount of columns in the entire table,\n  // and align row shouldn't be smaller than that (the rest of the rows can)\n  columnCount = columns.length;\n  if (columnCount > aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    token.map      = [ startLine, startLine + 1 ];\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.map      = [ startLine, startLine + 1 ];\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  token     = state.push('tbody_open', 'tbody', 1);\n  token.map = tbodyLines = [ startLine + 2, 0 ];\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n    token = state.push('tr_open', 'tr', 1);\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n  token = state.push('tbody_close', 'tbody', -1);\n  token = state.push('table_close', 'table', -1);\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/markdown-it/lib/rules_block/table.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}}],"sources":{"node_modules/markdown-it/lib/rules_block/table.js":"// GFM table, non-standard\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      escapes = 0,\n      lastPos = 0,\n      backTicked = false,\n      lastBackTick = 0;\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x60/* ` */) {\n      if (backTicked) {\n        // make \\` close code sequence, but not open it;\n        // the reason is: `\\` is correct code block\n        backTicked = false;\n        lastBackTick = pos;\n      } else if (escapes % 2 === 0) {\n        backTicked = true;\n        lastBackTick = pos;\n      }\n    } else if (ch === 0x7c/* | */ && (escapes % 2 === 0) && !backTicked) {\n      result.push(str.substring(lastPos, pos));\n      lastPos = pos + 1;\n    }\n\n    if (ch === 0x5c/* \\ */) {\n      escapes++;\n    } else {\n      escapes = 0;\n    }\n\n    pos++;\n\n    // If there was an un-closed backtick, go back to just after\n    // the last backtick, but as if it was a normal character\n    if (pos === max && backTicked) {\n      backTicked = false;\n      pos = lastBackTick + 1;\n    }\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n  // header row will define an amount of columns in the entire table,\n  // and align row shouldn't be smaller than that (the rest of the rows can)\n  columnCount = columns.length;\n  if (columnCount > aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    token.map      = [ startLine, startLine + 1 ];\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.map      = [ startLine, startLine + 1 ];\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  token     = state.push('tbody_open', 'tbody', 1);\n  token.map = tbodyLines = [ startLine + 2, 0 ];\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n    token = state.push('tr_open', 'tr', 1);\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n  token = state.push('tbody_close', 'tbody', -1);\n  token = state.push('table_close', 'table', -1);\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};\n"},"lineCount":197}},"error":null,"hash":"12b504b912f124b7df90d00553450b08","cacheData":{"env":{}}}