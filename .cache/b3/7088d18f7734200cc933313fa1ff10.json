{"id":"node_modules/markdown-it/lib/renderer.js","dependencies":[{"name":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/package.json","includedInParent":true,"mtime":1597318560231},{"name":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/node_modules/markdown-it/package.json","includedInParent":true,"mtime":1597318553241},{"name":"./common/utils","loc":{"line":13,"column":30},"parent":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/node_modules/markdown-it/lib/renderer.js","resolved":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/node_modules/markdown-it/lib/common/utils.js"}],"generated":{"js":"/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      highlighted, i, tmpAttrs, tmpToken;\n\n  if (info) {\n    langName = info.split(/\\s+/g)[0];\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/markdown-it/lib/renderer.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}}],"sources":{"node_modules/markdown-it/lib/renderer.js":"/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      highlighted, i, tmpAttrs, tmpToken;\n\n  if (info) {\n    langName = info.split(/\\s+/g)[0];\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n"},"lineCount":336}},"error":null,"hash":"5751c9184413ac9e3abc6d0fa4985418","cacheData":{"env":{}}}