{"id":"node_modules/markdown-it/lib/presets/default.js","dependencies":[{"name":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/package.json","includedInParent":true,"mtime":1597318560231},{"name":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/node_modules/markdown-it/package.json","includedInParent":true,"mtime":1597318553241}],"generated":{"js":"// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/markdown-it/lib/presets/default.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}}],"sources":{"node_modules/markdown-it/lib/presets/default.js":"// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n"},"lineCount":42}},"error":null,"hash":"a3dacbe9a72cb73092a37892b47325f6","cacheData":{"env":{}}}