{"id":"node_modules/markdown-it/lib/rules_inline/text.js","dependencies":[{"name":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/package.json","includedInParent":true,"mtime":1597318560231},{"name":"/Users/georgynuridzhanyan/Documents/Code/JS & HTML/Odin/Node/storyeven/storyeven/node_modules/markdown-it/package.json","includedInParent":true,"mtime":1597318553241}],"generated":{"js":"// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/markdown-it/lib/rules_inline/text.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}}],"sources":{"node_modules/markdown-it/lib/rules_inline/text.js":"// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n"},"lineCount":90}},"error":null,"hash":"0d4a525f759119c51b3ece79b18331d9","cacheData":{"env":{}}}